{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asher\\\\OneDrive\\\\Documents\\\\GitHub\\\\MERN-Fullstack-App\\\\main Project\\\\frontend\\\\src\\\\user\\\\pages\\\\Authenticate.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport useForm from \"../../shared/hooks/form-hook\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport './Auth.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Authenticate = props => {\n  _s();\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  //use the http custom hook\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n\n  //keep track of formstate\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData({\n        ...formState.inputs,\n        name: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({\n        ...formState.inputs,\n        name: {\n          value: '',\n          isValid: false\n        }\n      }, false);\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  //function that gets called whenever the button gets clicked\n  const userAuthInputHandler = async event => {\n    event.preventDefault();\n\n    //if user is loging in\n    if (isLoginMode) {\n      try {\n        await sendRequest('http://localhost:5000/api/users/login', 'POST', JSON.stringify({\n          email: formState.inputs.email.value,\n          password: formState.inputs.password.value\n        }), {\n          'Content-Type': 'application/json'\n        });\n        auth.login();\n      } catch (err) {\n        console.log(err);\n      }\n    } else {\n      //if user is signing up\n      try {\n        //send a http request to the backend api for signup\n        await sendRequest('http://localhost:5000/api/users/signup', 'POST', JSON.stringify({\n          name: formState.inputs.name.value,\n          email: formState.inputs.email.value,\n          password: formState.inputs.password.value\n        }), {\n          'Content-Type': 'application/json'\n        });\n        auth.login();\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClear: clearError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"authentication\",\n      children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        asOverlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login Required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: userAuthInputHandler,\n        children: [!isLoginMode && /*#__PURE__*/_jsxDEV(Input, {\n          element: \"input\",\n          id: \"name\",\n          type: \"text\",\n          label: \"Your Name\",\n          validators: [VALIDATOR_REQUIRE()],\n          errorText: \"Please enter your name\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"email\",\n          element: \"input\",\n          type: \"email\",\n          label: \"Email\",\n          validators: [VALIDATOR_EMAIL()],\n          errorText: \"Please enter a valid email\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"password\",\n          element: \"input\",\n          type: \"password\",\n          label: \"Password\",\n          validators: [VALIDATOR_MINLENGTH(5)],\n          errorText: \"Please enter a valid password (at least 5 characters long)\",\n          onInput: inputHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          disabled: !formState.isValid,\n          children: isLoginMode ? 'LOGIN' : 'SIGNUP'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        inverse: true,\n        onClick: switchModeHandler,\n        children: [\"SWITCH TO \", isLoginMode ? \"SIGNUP\" : \"LOGIN\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n};\n_s(Authenticate, \"/cPEAoj/5chXdaORvL/R/PtTN4g=\", false, function () {\n  return [useHttpClient, useForm];\n});\n_c = Authenticate;\nexport default Authenticate;\nvar _c;\n$RefreshReg$(_c, \"Authenticate\");","map":{"version":3,"names":["React","useState","useContext","Input","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","ErrorModal","LoadingSpinner","useForm","Button","Card","AuthContext","useHttpClient","jsxDEV","_jsxDEV","Authenticate","props","_s","auth","isLoginMode","setIsLoginMode","isLoading","error","sendRequest","clearError","formState","inputHandler","setFormData","email","value","isValid","password","switchModeHandler","inputs","name","undefined","prevMode","userAuthInputHandler","event","preventDefault","JSON","stringify","login","err","console","log","Fragment","children","onClear","fileName","_jsxFileName","lineNumber","columnNumber","className","asOverlay","onSubmit","element","id","type","label","validators","errorText","onInput","disabled","inverse","onClick","_c","$RefreshReg$"],"sources":["C:/Users/asher/OneDrive/Documents/GitHub/MERN-Fullstack-App/main Project/frontend/src/user/pages/Authenticate.jsx"],"sourcesContent":["import React, { useState, useContext } from \"react\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport useForm from \"../../shared/hooks/form-hook\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport './Auth.css';\r\n\r\nconst Authenticate = (props) => {\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [isLoginMode, setIsLoginMode] = useState(true);\r\n    //use the http custom hook\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n\r\n    //keep track of formstate\r\n    const [formState, inputHandler, setFormData] = useForm({\r\n        email: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        password: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n    }, false);\r\n\r\n    const switchModeHandler = () => {\r\n        if (!isLoginMode) {\r\n            setFormData(\r\n                {\r\n                    ...formState.inputs,\r\n                    name: undefined\r\n                },\r\n                formState.inputs.email.isValid && formState.inputs.password.isValid\r\n            );\r\n        } else {\r\n            setFormData({\r\n                ...formState.inputs,\r\n                name: {\r\n                    value: '',\r\n                    isValid: false\r\n                }\r\n            }, false);\r\n        }\r\n        setIsLoginMode(prevMode => !prevMode);\r\n    }\r\n\r\n    //function that gets called whenever the button gets clicked\r\n    const userAuthInputHandler = async (event) => {\r\n        event.preventDefault();\r\n\r\n        //if user is loging in\r\n        if (isLoginMode) {\r\n            try {\r\n                await sendRequest(\r\n                    'http://localhost:5000/api/users/login',\r\n                    'POST',\r\n                    JSON.stringify(\r\n                        {\r\n                            email: formState.inputs.email.value,\r\n                            password: formState.inputs.password.value\r\n                        }\r\n                    ),\r\n                    {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                );\r\n                auth.login();\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        } else {//if user is signing up\r\n            try {\r\n                //send a http request to the backend api for signup\r\n                await sendRequest(\r\n                    'http://localhost:5000/api/users/signup',\r\n                    'POST',\r\n                    JSON.stringify(\r\n                        {\r\n                            name: formState.inputs.name.value,\r\n                            email: formState.inputs.email.value,\r\n                            password: formState.inputs.password.value\r\n                        }\r\n                    ),\r\n                    {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                );\r\n                auth.login();\r\n            } catch (err) {\r\n                console.log(err);\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            <Card className=\"authentication\">\r\n                {isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Login Required</h2>\r\n                <hr />\r\n                <form onSubmit={userAuthInputHandler}>\r\n                    {!isLoginMode && (\r\n                        <Input\r\n                            element='input'\r\n                            id='name'\r\n                            type='text'\r\n                            label=\"Your Name\"\r\n                            validators={[VALIDATOR_REQUIRE()]}\r\n                            errorText=\"Please enter your name\"\r\n                            onInput={inputHandler}\r\n                        />\r\n                    )}\r\n                    <Input\r\n                        id='email'\r\n                        element='input'\r\n                        type='email'\r\n                        label='Email'\r\n                        validators={[VALIDATOR_EMAIL()]}\r\n                        errorText=\"Please enter a valid email\"\r\n                        onInput={inputHandler}\r\n                    />\r\n                    <Input\r\n                        id='password'\r\n                        element='input'\r\n                        type='password'\r\n                        label='Password'\r\n                        validators={[VALIDATOR_MINLENGTH(5)]}\r\n                        errorText=\"Please enter a valid password (at least 5 characters long)\"\r\n                        onInput={inputHandler}\r\n                    />\r\n                    <Button type='submit' disabled={!formState.isValid}>\r\n                        {isLoginMode ? 'LOGIN' : 'SIGNUP'}\r\n                    </Button>\r\n                </form>\r\n                <Button inverse onClick={switchModeHandler}>SWITCH TO {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}</Button>\r\n            </Card>\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default Authenticate;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}