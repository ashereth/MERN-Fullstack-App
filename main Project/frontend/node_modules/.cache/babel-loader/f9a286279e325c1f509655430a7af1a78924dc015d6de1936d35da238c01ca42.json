{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asher\\\\OneDrive\\\\Documents\\\\GitHub\\\\MERN-Fullstack-App\\\\main Project\\\\frontend\\\\src\\\\places\\\\pages\\\\NewPlace.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport './PlaceForm.css';\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport useForm from '../../shared/hooks/form-hook';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewPlace = () => {\n  _s();\n  const auth = useContext(AuthContext);\n  const [isLoading, error, sendRequest, clearError] = useHttpClient();\n  const [formState, inputHandler] = useForm({\n    title: {\n      value: '',\n      isValid: false\n    },\n    description: {\n      value: '',\n      isValid: false\n    },\n    address: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n  const placeSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      //use custom hook to make new place\n      await sendRequest('http://localhost:5000/api/places', 'POST', JSON.stringify({\n        title: formState.inputs.title.value,\n        description: formState.inputs.description.value,\n        address: formState.inputs.address.value,\n        creator: auth.userId\n      }));\n      //redirect user to a different page\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClear: clearError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"place-form\",\n      onSubmit: placeSubmitHandler,\n      children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        asOverlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"title\",\n        type: \"text\",\n        label: \"Title\",\n        element: \"input\",\n        validators: [VALIDATOR_REQUIRE()],\n        errorText: \"Please Enter A Valid Title.\",\n        onInput: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"description\",\n        label: \"Description\",\n        element: \"textarea\",\n        validators: [VALIDATOR_MINLENGTH(5)],\n        errorText: \"Please Enter A Valid Description (at least 5 characters).\",\n        onInput: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"address\",\n        label: \"Address\",\n        element: \"input\",\n        validators: [VALIDATOR_REQUIRE()],\n        errorText: \"Please Enter A Valid Address.\",\n        onInput: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        disabled: !formState.isValid,\n        children: \"ADD PLACE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(NewPlace, \"E9pe+haq12lWzsXw25SoaaLUJBI=\", false, function () {\n  return [useHttpClient, useForm];\n});\n_c = NewPlace;\nexport default NewPlace;\nvar _c;\n$RefreshReg$(_c, \"NewPlace\");","map":{"version":3,"names":["React","useContext","Input","ErrorModal","LoadingSpinner","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","Button","useHttpClient","AuthContext","useForm","jsxDEV","_jsxDEV","NewPlace","_s","auth","isLoading","error","sendRequest","clearError","formState","inputHandler","title","value","isValid","description","address","placeSubmitHandler","event","preventDefault","JSON","stringify","inputs","creator","userId","err","console","log","message","Fragment","children","onClear","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","asOverlay","id","type","label","element","validators","errorText","onInput","disabled","_c","$RefreshReg$"],"sources":["C:/Users/asher/OneDrive/Documents/GitHub/MERN-Fullstack-App/main Project/frontend/src/places/pages/NewPlace.jsx"],"sourcesContent":["import React, { useContext } from \"react\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport './PlaceForm.css';\r\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport useForm from '../../shared/hooks/form-hook';\r\n\r\n\r\nconst NewPlace = () => {\r\n    const auth = useContext(AuthContext);\r\n    const [isLoading, error, sendRequest, clearError] = useHttpClient();\r\n\r\n    const [formState, inputHandler] = useForm({\r\n        title: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        description: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        address: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n    }, false);\r\n\r\n    const placeSubmitHandler = async event => {\r\n        event.preventDefault();\r\n        try {\r\n            //use custom hook to make new place\r\n            await sendRequest(\r\n                'http://localhost:5000/api/places',\r\n                'POST',\r\n                JSON.stringify(\r\n                    {\r\n                        title: formState.inputs.title.value,\r\n                        description: formState.inputs.description.value,\r\n                        address: formState.inputs.address.value,\r\n                        creator: auth.userId\r\n                    }\r\n                )\r\n            )\r\n            //redirect user to a different page\r\n        } catch (err) {\r\n            console.log(err.message)\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n                {isLoading && <LoadingSpinner asOverlay />}\r\n                <Input\r\n                    id=\"title\"\r\n                    type=\"text\"\r\n                    label=\"Title\"\r\n                    element=\"input\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText='Please Enter A Valid Title.'\r\n                    onInput={inputHandler}\r\n                />\r\n                <Input\r\n                    id='description'\r\n                    label=\"Description\"\r\n                    element=\"textarea\"\r\n                    validators={[VALIDATOR_MINLENGTH(5)]}\r\n                    errorText='Please Enter A Valid Description (at least 5 characters).'\r\n                    onInput={inputHandler}\r\n                />\r\n                <Input\r\n                    id='address'\r\n                    label=\"Address\"\r\n                    element=\"input\"\r\n                    validators={[VALIDATOR_REQUIRE()]}\r\n                    errorText='Please Enter A Valid Address.'\r\n                    onInput={inputHandler}\r\n                />\r\n\r\n                <Button type='submit' disabled={!formState.isValid} >\r\n                    ADD PLACE\r\n                </Button>\r\n            </form>\r\n        </React.Fragment>\r\n\r\n    )\r\n};\r\n\r\nexport default NewPlace;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}