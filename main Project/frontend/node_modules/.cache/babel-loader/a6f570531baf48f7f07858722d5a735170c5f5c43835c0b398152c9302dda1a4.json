{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asher\\\\OneDrive\\\\Documents\\\\GitHub\\\\MERN-Fullstack-App\\\\main Project\\\\frontend\\\\src\\\\places\\\\pages\\\\NewPlace.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport './PlaceForm.css';\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewPlace = () => {\n  _s();\n  useForm({\n    title: {\n      value: '',\n      isValid: false\n    },\n    description: {\n      value: '',\n      isValid: false\n    },\n    address: {\n      value: '',\n      isValid: false\n    }\n  });\n  const placeSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs); //will be sent to backend\n  };\n\n  //usecallback so that the function doesnt get remade everytime the page is reloaded\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"place-form\",\n    onSubmit: placeSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      id: \"title\",\n      type: \"text\",\n      label: \"Title\",\n      element: \"input\",\n      validators: [VALIDATOR_REQUIRE()],\n      errorText: \"Please Enter A Valid Title.\",\n      onInput: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"description\",\n      label: \"Description\",\n      element: \"textarea\",\n      validators: [VALIDATOR_MINLENGTH(5)],\n      errorText: \"Please Enter A Valid Description (at least 5 characters).\",\n      onInput: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"address\",\n      label: \"Address\",\n      element: \"input\",\n      validators: [VALIDATOR_REQUIRE()],\n      errorText: \"Please Enter A Valid Address.\",\n      onInput: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      disabled: !formState.isValid,\n      children: \"ADD PLACE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(NewPlace, \"OkrkYNc+ZNxzq6F1a12m+AiMnfs=\", false, function () {\n  return [useForm];\n});\n_c = NewPlace;\nexport default NewPlace;\nvar _c;\n$RefreshReg$(_c, \"NewPlace\");","map":{"version":3,"names":["React","Input","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","Button","useForm","jsxDEV","_jsxDEV","NewPlace","_s","title","value","isValid","description","address","placeSubmitHandler","event","preventDefault","console","log","formState","inputs","inputHandler","useCallback","id","dispatch","type","inputId","className","onSubmit","children","label","element","validators","errorText","onInput","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","$RefreshReg$"],"sources":["C:/Users/asher/OneDrive/Documents/GitHub/MERN-Fullstack-App/main Project/frontend/src/places/pages/NewPlace.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport './PlaceForm.css';\r\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\n\r\n\r\nconst NewPlace = () => {\r\n    useForm({\r\n        title: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        description: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        address: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n    })\r\n\r\n    const placeSubmitHandler = event => {\r\n        event.preventDefault();\r\n        console.log(formState.inputs);//will be sent to backend\r\n    };\r\n\r\n    //usecallback so that the function doesnt get remade everytime the page is reloaded\r\n    const inputHandler = useCallback((id, value, isValid) => {\r\n        dispatch({ type: 'INPUT_CHANGE', value: value, isValid: isValid, inputId: id })\r\n    }, []);\r\n\r\n    return (\r\n        <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n            <Input\r\n                id=\"title\"\r\n                type=\"text\"\r\n                label=\"Title\"\r\n                element=\"input\"\r\n                validators={[VALIDATOR_REQUIRE()]}\r\n                errorText='Please Enter A Valid Title.'\r\n                onInput={inputHandler}\r\n            />\r\n            <Input\r\n                id='description'\r\n                label=\"Description\"\r\n                element=\"textarea\"\r\n                validators={[VALIDATOR_MINLENGTH(5)]}\r\n                errorText='Please Enter A Valid Description (at least 5 characters).'\r\n                onInput={inputHandler}\r\n            />\r\n            <Input\r\n                id='address'\r\n                label=\"Address\"\r\n                element=\"input\"\r\n                validators={[VALIDATOR_REQUIRE()]}\r\n                errorText='Please Enter A Valid Address.'\r\n                onInput={inputHandler}\r\n            />\r\n\r\n            <Button type='submit' disabled={!formState.isValid} >\r\n                ADD PLACE\r\n            </Button>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default NewPlace;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}