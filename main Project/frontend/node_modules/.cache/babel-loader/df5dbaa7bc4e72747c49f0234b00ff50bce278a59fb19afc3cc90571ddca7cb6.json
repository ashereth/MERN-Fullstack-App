{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asher\\\\OneDrive\\\\Documents\\\\GitHub\\\\MERN-Fullstack-App\\\\main Project\\\\frontend\\\\src\\\\user\\\\pages\\\\Users.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport UsersList from \"../components/UsersList\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Users = () => {\n  _s();\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  //keep track of users\n  const [loadedUsers, setLoadedUsers] = useState();\n\n  //dont use async in useEffect instead create an async function within useEffect\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        //get users using a get request with custom hook\n        const responseData = await sendRequest('http://localhost:5000/api/users');\n        setLoadedUsers(responseData.users);\n      } catch (err) {\n        console.log(err.message);\n      }\n      setIsLoading(false);\n    };\n    fetchUsers();\n  }, []);\n  const errorHandler = () => {\n    setError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClear: errorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this), !isLoading && loadedUsers && /*#__PURE__*/_jsxDEV(UsersList, {\n      items: loadedUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 43\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(Users, \"LgV4OV3svx+SdyvxL/9ZeC9O1LI=\", false, function () {\n  return [useHttpClient];\n});\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useEffect","useState","UsersList","ErrorModal","useHttpClient","LoadingSpinner","jsxDEV","_jsxDEV","Users","_s","isLoading","error","sendRequest","clearError","loadedUsers","setLoadedUsers","fetchUsers","responseData","users","err","console","log","message","setIsLoading","errorHandler","setError","Fragment","children","onClear","fileName","_jsxFileName","lineNumber","columnNumber","className","items","_c","$RefreshReg$"],"sources":["C:/Users/asher/OneDrive/Documents/GitHub/MERN-Fullstack-App/main Project/frontend/src/user/pages/Users.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport UsersList from \"../components/UsersList\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nconst Users = () => {\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    //keep track of users\r\n    const [loadedUsers, setLoadedUsers] = useState();\r\n\r\n    //dont use async in useEffect instead create an async function within useEffect\r\n    useEffect(() => {\r\n        const fetchUsers = async () => {\r\n            try {\r\n                //get users using a get request with custom hook\r\n                const responseData = await sendRequest('http://localhost:5000/api/users');\r\n\r\n                setLoadedUsers(responseData.users);\r\n            } catch (err) {\r\n                console.log(err.message)\r\n            }\r\n            setIsLoading(false);\r\n\r\n        }\r\n        fetchUsers();\r\n\r\n    }, [])\r\n\r\n    const errorHandler = () => {\r\n        setError(null);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={errorHandler} />\r\n            {isLoading && (\r\n                <div className=\"center\">\r\n                    <LoadingSpinner />\r\n                </div>\r\n            )}\r\n            {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\r\n        </React.Fragment>\r\n\r\n    );\r\n}\r\n\r\nexport default Users;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,UAAU,MAAM,+CAA+C;AACtE,SAASC,aAAa,QAAQ,8BAA8B;AAC5D,OAAOC,cAAc,MAAM,mDAAmD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/E,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM;IAAEC,SAAS;IAAEC,KAAK;IAAEC,WAAW;IAAEC;EAAW,CAAC,GAAGT,aAAa,CAAC,CAAC;EACrE;EACA,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,CAAC;;EAEhD;EACAD,SAAS,CAAC,MAAM;IACZ,MAAMgB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA;QACA,MAAMC,YAAY,GAAG,MAAML,WAAW,CAAC,iCAAiC,CAAC;QAEzEG,cAAc,CAACE,YAAY,CAACC,KAAK,CAAC;MACtC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,OAAO,CAAC;MAC5B;MACAC,YAAY,CAAC,KAAK,CAAC;IAEvB,CAAC;IACDP,UAAU,CAAC,CAAC;EAEhB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,YAAY,GAAGA,CAAA,KAAM;IACvBC,QAAQ,CAAC,IAAI,CAAC;EAClB,CAAC;EAED,oBACIlB,OAAA,CAACR,KAAK,CAAC2B,QAAQ;IAAAC,QAAA,gBACXpB,OAAA,CAACJ,UAAU;MAACQ,KAAK,EAAEA,KAAM;MAACiB,OAAO,EAAEJ;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAClDtB,SAAS,iBACNH,OAAA;MAAK0B,SAAS,EAAC,QAAQ;MAAAN,QAAA,eACnBpB,OAAA,CAACF,cAAc;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CACR,EACA,CAACtB,SAAS,IAAII,WAAW,iBAAIP,OAAA,CAACL,SAAS;MAACgC,KAAK,EAAEpB;IAAY;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAGzB,CAAC;AAAAvB,EAAA,CAvCKD,KAAK;EAAA,QAC+CJ,aAAa;AAAA;AAAA+B,EAAA,GADjE3B,KAAK;AAyCX,eAAeA,KAAK;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}