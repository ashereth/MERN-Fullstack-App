{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asher\\\\OneDrive\\\\Documents\\\\GitHub\\\\MERN-Fullstack-App\\\\main Project\\\\frontend\\\\src\\\\places\\\\pages\\\\NewPlace.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport './PlaceForm.css';\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport useForm from '../../shared/hooks/form-hook';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewPlace = () => {\n  _s();\n  const auth = useContext(AuthContext);\n  const [isLoading, error, sendRequest, clearError] = useHttpClient();\n  const [formState, inputHandler] = useForm({\n    title: {\n      value: '',\n      isValid: false\n    },\n    description: {\n      value: '',\n      isValid: false\n    },\n    address: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n  const placeSubmitHandler = async event => {\n    event.preventDefault();\n    //use custom hook to make new place\n    await sendRequest('http://localhost:5000/api/places', 'POST', JSON.stringify({\n      title: formState.inputs.title.value,\n      description: formState.inputs.description.value,\n      address: formState.inputs.address.value,\n      creator: auth.userId\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"place-form\",\n    onSubmit: placeSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      id: \"title\",\n      type: \"text\",\n      label: \"Title\",\n      element: \"input\",\n      validators: [VALIDATOR_REQUIRE()],\n      errorText: \"Please Enter A Valid Title.\",\n      onInput: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"description\",\n      label: \"Description\",\n      element: \"textarea\",\n      validators: [VALIDATOR_MINLENGTH(5)],\n      errorText: \"Please Enter A Valid Description (at least 5 characters).\",\n      onInput: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"address\",\n      label: \"Address\",\n      element: \"input\",\n      validators: [VALIDATOR_REQUIRE()],\n      errorText: \"Please Enter A Valid Address.\",\n      onInput: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      disabled: !formState.isValid,\n      children: \"ADD PLACE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(NewPlace, \"E9pe+haq12lWzsXw25SoaaLUJBI=\", false, function () {\n  return [useHttpClient, useForm];\n});\n_c = NewPlace;\nexport default NewPlace;\nvar _c;\n$RefreshReg$(_c, \"NewPlace\");","map":{"version":3,"names":["React","useContext","Input","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","Button","useHttpClient","AuthContext","useForm","jsxDEV","_jsxDEV","NewPlace","_s","auth","isLoading","error","sendRequest","clearError","formState","inputHandler","title","value","isValid","description","address","placeSubmitHandler","event","preventDefault","JSON","stringify","inputs","creator","userId","className","onSubmit","children","id","type","label","element","validators","errorText","onInput","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","$RefreshReg$"],"sources":["C:/Users/asher/OneDrive/Documents/GitHub/MERN-Fullstack-App/main Project/frontend/src/places/pages/NewPlace.jsx"],"sourcesContent":["import React, { useContext } from \"react\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport './PlaceForm.css';\r\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport useForm from '../../shared/hooks/form-hook';\r\n\r\n\r\nconst NewPlace = () => {\r\n    const auth = useContext(AuthContext);\r\n    const [isLoading, error, sendRequest, clearError] = useHttpClient();\r\n\r\n    const [formState, inputHandler] = useForm({\r\n        title: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        description: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        address: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n    }, false);\r\n\r\n    const placeSubmitHandler = async event => {\r\n        event.preventDefault();\r\n        //use custom hook to make new place\r\n        await sendRequest(\r\n            'http://localhost:5000/api/places',\r\n            'POST',\r\n            JSON.stringify(\r\n                {\r\n                    title: formState.inputs.title.value,\r\n                    description: formState.inputs.description.value,\r\n                    address: formState.inputs.address.value,\r\n                    creator: auth.userId\r\n                }\r\n            )\r\n        )\r\n    };\r\n\r\n    return (\r\n        <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n            <Input\r\n                id=\"title\"\r\n                type=\"text\"\r\n                label=\"Title\"\r\n                element=\"input\"\r\n                validators={[VALIDATOR_REQUIRE()]}\r\n                errorText='Please Enter A Valid Title.'\r\n                onInput={inputHandler}\r\n            />\r\n            <Input\r\n                id='description'\r\n                label=\"Description\"\r\n                element=\"textarea\"\r\n                validators={[VALIDATOR_MINLENGTH(5)]}\r\n                errorText='Please Enter A Valid Description (at least 5 characters).'\r\n                onInput={inputHandler}\r\n            />\r\n            <Input\r\n                id='address'\r\n                label=\"Address\"\r\n                element=\"input\"\r\n                validators={[VALIDATOR_REQUIRE()]}\r\n                errorText='Please Enter A Valid Address.'\r\n                onInput={inputHandler}\r\n            />\r\n\r\n            <Button type='submit' disabled={!formState.isValid} >\r\n                ADD PLACE\r\n            </Button>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default NewPlace;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}