{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asher\\\\OneDrive\\\\Documents\\\\GitHub\\\\MERN-Fullstack-App\\\\main Project\\\\frontend\\\\src\\\\shared\\\\components\\\\FormElements\\\\Input.jsx\",\n  _s = $RefreshSig$();\nimport React, { useReducer, useEffect } from \"react\";\nimport './Input.css';\nimport { validate } from \"../../util/validators\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        //keep old state\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH':\n      return {\n        ...state,\n        isTouched: true\n      };\n\n    //return unchanged state on default\n    default:\n      return state;\n  }\n};\nconst Input = props => {\n  _s();\n  //use useReducer to manage complex state/interconnnected state\n  //pass it a function and initial state\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.value || '',\n    isValid: props.valid || false,\n    isTouched: false\n  });\n  const {\n    id,\n    onInput\n  } = props;\n  const {\n    value,\n    isValid\n  } = inputState;\n  useEffect(() => {\n    props.onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  //if given input as a prop then render an input field otherwise just render a text area\n  const element = props.element === 'input' ? /*#__PURE__*/_jsxDEV(\"input\", {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: changeHandler,\n    onBlur: touchHandler,\n    value: inputState.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n    id: props.id,\n    rows: props.rows || 3,\n    onChange: changeHandler,\n    onBlur: touchHandler,\n    value: inputState.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), element, !inputState.isValid && inputState.isTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.errorText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 61\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(Input, \"qDyZbTOmS6BVix8eAVSCYKY2Z0M=\");\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useReducer","useEffect","validate","jsxDEV","_jsxDEV","inputReducer","state","action","type","value","val","isValid","validators","isTouched","Input","props","_s","inputState","dispatch","valid","id","onInput","changeHandler","event","target","touchHandler","element","placeholder","onChange","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","rows","className","children","htmlFor","label","errorText","_c","$RefreshReg$"],"sources":["C:/Users/asher/OneDrive/Documents/GitHub/MERN-Fullstack-App/main Project/frontend/src/shared/components/FormElements/Input.jsx"],"sourcesContent":["import React, { useReducer, useEffect } from \"react\";\r\n\r\nimport './Input.css';\r\nimport { validate } from \"../../util/validators\";\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE':\r\n            return {\r\n                ...state,//keep old state\r\n                value: action.val,\r\n                isValid: validate(action.val, action.validators)\r\n            };\r\n        case 'TOUCH':\r\n            return {\r\n                ...state,\r\n                isTouched: true\r\n            }\r\n\r\n        //return unchanged state on default\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst Input = props => {\r\n    //use useReducer to manage complex state/interconnnected state\r\n    //pass it a function and initial state\r\n    const [inputState, dispatch] = useReducer(\r\n        inputReducer, {\r\n        value: props.value || '',\r\n        isValid: props.valid || false,\r\n        isTouched: false\r\n        }\r\n    );\r\n\r\n    const { id, onInput } = props;\r\n    const { value, isValid } = inputState;\r\n\r\n    useEffect(() => {\r\n        props.onInput(id, value, isValid)\r\n    }, [id, value, isValid, onInput])\r\n\r\n    const changeHandler = event => {\r\n        dispatch({ type: 'CHANGE', val: event.target.value, validators: props.validators });\r\n    };\r\n\r\n    const touchHandler = () => {\r\n        dispatch({\r\n            type: 'TOUCH'\r\n        })\r\n    };\r\n\r\n    //if given input as a prop then render an input field otherwise just render a text area\r\n    const element = props.element === 'input' ? (\r\n        <input\r\n            id={props.id}\r\n            type={props.type}\r\n            placeholder={props.placeholder}\r\n            onChange={changeHandler}\r\n            onBlur={touchHandler}\r\n            value={inputState.value}\r\n        />\r\n    ) : (\r\n        <textarea\r\n            id={props.id}\r\n            rows={props.rows || 3}\r\n            onChange={changeHandler}\r\n            onBlur={touchHandler}\r\n            value={inputState.value}\r\n        />\r\n    );\r\n\r\n\r\n\r\n    return (\r\n        <div className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}>\r\n            <label htmlFor={props.id}>{props.label}</label>\r\n            {element}\r\n            {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}