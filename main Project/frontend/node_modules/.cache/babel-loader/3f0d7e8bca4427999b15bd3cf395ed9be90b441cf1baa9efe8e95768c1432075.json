{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asher\\\\OneDrive\\\\Documents\\\\GitHub\\\\MERN-Fullstack-App\\\\main Project\\\\frontend\\\\src\\\\user\\\\pages\\\\Authenticate.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\nimport useForm from \"../../shared/hooks/form-hook\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Authenticate = props => {\n  _s();\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n\n  //useEffect to make sure setFormData isnt called on every reload which could create a infinite loop\n  useEffect(() => {\n    //make sure the identified place was found\n    if (identifiedPlace) {\n      setFormData({\n        title: {\n          value: identifiedPlace.title,\n          isValid: true\n        },\n        description: {\n          value: identifiedPlace.description,\n          isValid: true\n        }\n      }, true);\n    }\n    setIsLoading(false);\n  }, [setFormData, identifiedPlace]);\n  const userAuthInputHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"authentication-form\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      id: \"email\",\n      element: \"input\",\n      type: \"text\",\n      label: \"Email\",\n      validators: [VALIDATOR_EMAIL()],\n      errorText: \"please enter a valid email\",\n      onInput: inputHandler,\n      initialValue: formState.inputs.email.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"password\",\n      element: \"input\",\n      type: \"text\",\n      label: \"Password\",\n      validators: [VALIDATOR_MINLENGTH(5)],\n      errorText: \"please enter a valid password (at least 5 characters long)\",\n      onInput: inputHandler,\n      initialValue: formState.inputs.password.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      disabled: !formState.isValid,\n      onClick: userAuthInputHandler,\n      children: \"UPDATE PLACE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(Authenticate, \"5XdzkvU2g6stxXJfXkxVHnQf00w=\", false, function () {\n  return [useForm];\n});\n_c = Authenticate;\nexport default Authenticate;\nvar _c;\n$RefreshReg$(_c, \"Authenticate\");","map":{"version":3,"names":["React","useEffect","Input","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","useForm","Button","jsxDEV","_jsxDEV","Authenticate","props","_s","formState","inputHandler","setFormData","email","value","isValid","password","identifiedPlace","title","description","setIsLoading","userAuthInputHandler","event","preventDefault","console","log","inputs","className","children","id","element","type","label","validators","errorText","onInput","initialValue","fileName","_jsxFileName","lineNumber","columnNumber","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/asher/OneDrive/Documents/GitHub/MERN-Fullstack-App/main Project/frontend/src/user/pages/Authenticate.jsx"],"sourcesContent":["import React, {useEffect} from \"react\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\r\nimport useForm from \"../../shared/hooks/form-hook\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\n\r\nconst Authenticate = (props) => {\r\n\r\n    const [formState, inputHandler, setFormData] = useForm({\r\n        email: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        password: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n    }, false);\r\n\r\n        //useEffect to make sure setFormData isnt called on every reload which could create a infinite loop\r\n        useEffect(() => {\r\n            //make sure the identified place was found\r\n            if (identifiedPlace) {\r\n                setFormData({\r\n                    title: {\r\n                        value: identifiedPlace.title,\r\n                        isValid: true\r\n                    },\r\n                    description: {\r\n                        value: identifiedPlace.description,\r\n                        isValid: true\r\n                    }\r\n                }, true);\r\n            }\r\n    \r\n            setIsLoading(false);\r\n        }, [setFormData, identifiedPlace]);\r\n\r\n    const userAuthInputHandler = (event) => {\r\n        event.preventDefault();\r\n        console.log(formState.inputs);\r\n    }\r\n\r\n    return (\r\n        <form className=\"authentication-form\">\r\n            <Input\r\n                id='email'\r\n                element='input'\r\n                type='text'\r\n                label='Email'\r\n                validators={[VALIDATOR_EMAIL()]}\r\n                errorText=\"please enter a valid email\"\r\n                onInput={inputHandler}\r\n                initialValue={formState.inputs.email.value}\r\n            />\r\n            <Input\r\n                id='password'\r\n                element='input'\r\n                type='text'\r\n                label='Password'\r\n                validators={[VALIDATOR_MINLENGTH(5)]}\r\n                errorText=\"please enter a valid password (at least 5 characters long)\"\r\n                onInput={inputHandler}\r\n                initialValue={formState.inputs.password.value}\r\n            />\r\n            <Button type='submit' disabled={!formState.isValid} onClick={userAuthInputHandler}>\r\n                UPDATE PLACE\r\n            </Button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Authenticate;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AAEtC,OAAOC,KAAK,MAAM,4CAA4C;AAC9D,SAASC,eAAe,EAAEC,mBAAmB,QAAQ,8BAA8B;AACnF,OAAOC,OAAO,MAAM,8BAA8B;AAClD,OAAOC,MAAM,MAAM,6CAA6C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAE5B,MAAM,CAACC,SAAS,EAAEC,YAAY,EAAEC,WAAW,CAAC,GAAGT,OAAO,CAAC;IACnDU,KAAK,EAAE;MACHC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACb,CAAC;IACDC,QAAQ,EAAE;MACNF,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACb;EACJ,CAAC,EAAE,KAAK,CAAC;;EAEL;EACAhB,SAAS,CAAC,MAAM;IACZ;IACA,IAAIkB,eAAe,EAAE;MACjBL,WAAW,CAAC;QACRM,KAAK,EAAE;UACHJ,KAAK,EAAEG,eAAe,CAACC,KAAK;UAC5BH,OAAO,EAAE;QACb,CAAC;QACDI,WAAW,EAAE;UACTL,KAAK,EAAEG,eAAe,CAACE,WAAW;UAClCJ,OAAO,EAAE;QACb;MACJ,CAAC,EAAE,IAAI,CAAC;IACZ;IAEAK,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC,EAAE,CAACR,WAAW,EAAEK,eAAe,CAAC,CAAC;EAEtC,MAAMI,oBAAoB,GAAIC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBC,OAAO,CAACC,GAAG,CAACf,SAAS,CAACgB,MAAM,CAAC;EACjC,CAAC;EAED,oBACIpB,OAAA;IAAMqB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBACjCtB,OAAA,CAACN,KAAK;MACF6B,EAAE,EAAC,OAAO;MACVC,OAAO,EAAC,OAAO;MACfC,IAAI,EAAC,MAAM;MACXC,KAAK,EAAC,OAAO;MACbC,UAAU,EAAE,CAAChC,eAAe,CAAC,CAAC,CAAE;MAChCiC,SAAS,EAAC,4BAA4B;MACtCC,OAAO,EAAExB,YAAa;MACtByB,YAAY,EAAE1B,SAAS,CAACgB,MAAM,CAACb,KAAK,CAACC;IAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFlC,OAAA,CAACN,KAAK;MACF6B,EAAE,EAAC,UAAU;MACbC,OAAO,EAAC,OAAO;MACfC,IAAI,EAAC,MAAM;MACXC,KAAK,EAAC,UAAU;MAChBC,UAAU,EAAE,CAAC/B,mBAAmB,CAAC,CAAC,CAAC,CAAE;MACrCgC,SAAS,EAAC,4DAA4D;MACtEC,OAAO,EAAExB,YAAa;MACtByB,YAAY,EAAE1B,SAAS,CAACgB,MAAM,CAACV,QAAQ,CAACF;IAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACFlC,OAAA,CAACF,MAAM;MAAC2B,IAAI,EAAC,QAAQ;MAACU,QAAQ,EAAE,CAAC/B,SAAS,CAACK,OAAQ;MAAC2B,OAAO,EAAErB,oBAAqB;MAAAO,QAAA,EAAC;IAEnF;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEf,CAAC;AAAA/B,EAAA,CAhEKF,YAAY;EAAA,QAEiCJ,OAAO;AAAA;AAAAwC,EAAA,GAFpDpC,YAAY;AAkElB,eAAeA,YAAY;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}