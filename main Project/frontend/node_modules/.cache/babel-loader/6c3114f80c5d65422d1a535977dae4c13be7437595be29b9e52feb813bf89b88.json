{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback, useRef, useEffect } from \"react\";\nexport const useHttpClient = () => {\n  _s();\n  //keep track of loading state and errors\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  //keep track of http requests so that errors dont occur if the page changes before http request finishes\n  const activeHttpRequest = useRef([]);\n  const sendRequest = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\n    setIsLoading(true);\n    //keep\n    const httpAbortController = new AbortController();\n    activeHttpRequest.current.push(httpAbortController);\n    try {\n      const response = await fetch(url, {\n        method,\n        body,\n        headers,\n        signal: httpAbortController.signal\n      });\n      const responseData = await response.json();\n      if (!response.ok) {\n        throw new Error(responseData.message);\n      }\n      return responseData;\n    } catch (err) {\n      setError(err.message || 'unkown error');\n      throw err;\n    }\n    setIsLoading(false);\n  }, []);\n  const clearError = () => {\n    setError(null);\n  };\n\n  //cleanup function for when this custom hook unmounts\n  useEffect(() => {\n    return () => {\n      //call abort on all http requests\n      activeHttpRequest.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n  return {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  };\n};\n_s(useHttpClient, \"nP29WxHGId9HIAlksd/2B26EgDk=\");","map":{"version":3,"names":["useState","useCallback","useRef","useEffect","useHttpClient","_s","isLoading","setIsLoading","error","setError","activeHttpRequest","sendRequest","url","method","body","headers","httpAbortController","AbortController","current","push","response","fetch","signal","responseData","json","ok","Error","message","err","clearError","forEach","abortCtrl","abort"],"sources":["C:/Users/asher/OneDrive/Documents/GitHub/MERN-Fullstack-App/main Project/frontend/src/shared/hooks/http-hook.jsx"],"sourcesContent":["import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n    //keep track of loading state and errors\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n\r\n    //keep track of http requests so that errors dont occur if the page changes before http request finishes\r\n    const activeHttpRequest = useRef([]);\r\n\r\n    const sendRequest = useCallback(async (\r\n        url,\r\n        method = 'GET',\r\n        body = null,\r\n        headers = {}) => {\r\n        setIsLoading(true)\r\n        //keep\r\n        const httpAbortController = new AbortController();\r\n        activeHttpRequest.current.push(httpAbortController);\r\n\r\n        try {\r\n            const response = await fetch(url, {\r\n                method,\r\n                body,\r\n                headers,\r\n                signal: httpAbortController.signal\r\n            });\r\n\r\n            const responseData = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(responseData.message);\r\n            }\r\n\r\n            return responseData;\r\n        } catch (err) {\r\n            setError(err.message || 'unkown error')\r\n            throw err;\r\n        }\r\n        setIsLoading(false)\r\n    }, []);\r\n\r\n    const clearError = () => {\r\n        setError(null);\r\n    }\r\n\r\n    //cleanup function for when this custom hook unmounts\r\n    useEffect(() => {\r\n        return () => {\r\n            //call abort on all http requests\r\n            activeHttpRequest.current.forEach(abortCtrl => abortCtrl.abort())\r\n        }\r\n    }, [])\r\n\r\n    return { isLoading, error, sendRequest, clearError };\r\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAEhE,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC;;EAEpC;EACA,MAAMU,iBAAiB,GAAGR,MAAM,CAAC,EAAE,CAAC;EAEpC,MAAMS,WAAW,GAAGV,WAAW,CAAC,OAC5BW,GAAG,EACHC,MAAM,GAAG,KAAK,EACdC,IAAI,GAAG,IAAI,EACXC,OAAO,GAAG,CAAC,CAAC,KAAK;IACjBR,YAAY,CAAC,IAAI,CAAC;IAClB;IACA,MAAMS,mBAAmB,GAAG,IAAIC,eAAe,CAAC,CAAC;IACjDP,iBAAiB,CAACQ,OAAO,CAACC,IAAI,CAACH,mBAAmB,CAAC;IAEnD,IAAI;MACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACT,GAAG,EAAE;QAC9BC,MAAM;QACNC,IAAI;QACJC,OAAO;QACPO,MAAM,EAAEN,mBAAmB,CAACM;MAChC,CAAC,CAAC;MAEF,MAAMC,YAAY,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAE1C,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAACH,YAAY,CAACI,OAAO,CAAC;MACzC;MAEA,OAAOJ,YAAY;IACvB,CAAC,CAAC,OAAOK,GAAG,EAAE;MACVnB,QAAQ,CAACmB,GAAG,CAACD,OAAO,IAAI,cAAc,CAAC;MACvC,MAAMC,GAAG;IACb;IACArB,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMsB,UAAU,GAAGA,CAAA,KAAM;IACrBpB,QAAQ,CAAC,IAAI,CAAC;EAClB,CAAC;;EAED;EACAN,SAAS,CAAC,MAAM;IACZ,OAAO,MAAM;MACT;MACAO,iBAAiB,CAACQ,OAAO,CAACY,OAAO,CAACC,SAAS,IAAIA,SAAS,CAACC,KAAK,CAAC,CAAC,CAAC;IACrE,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAE1B,SAAS;IAAEE,KAAK;IAAEG,WAAW;IAAEkB;EAAW,CAAC;AACxD,CAAC;AAACxB,EAAA,CArDWD,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}