{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useReducer } from \"react\";\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      //check all inputs and update formisvalid if all actions that changed are valid or not\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid\n          }\n        },\n        isValid: formIsValid\n      };\n    default:\n      return state;\n  }\n};\nconst useForm = (initialInputs, initialFormValidity) => {\n  _s();\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  //usecallback so that the function doesnt get remade everytime the page is reloaded\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n};\n_s(useForm, \"8EtoTnaoDto9StzdgeTlDJ7wmKE=\");\nexport default useForm;","map":{"version":3,"names":["useCallback","useReducer","formReducer","state","action","type","formIsValid","inputId","inputs","isValid","value","useForm","initialInputs","initialFormValidity","_s","formState","dispatch","inputHandler","id"],"sources":["C:/Users/asher/OneDrive/Documents/GitHub/MERN-Fullstack-App/main Project/frontend/src/shared/hooks/form-hook.js"],"sourcesContent":["import { useCallback, useReducer } from \"react\";\r\n\r\n\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'INPUT_CHANGE':\r\n            let formIsValid = true;\r\n            //check all inputs and update formisvalid if all actions that changed are valid or not\r\n            for (const inputId in state.inputs) {\r\n                if (inputId === action.inputId) {\r\n                    formIsValid = formIsValid && action.isValid;\r\n                } else {\r\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                inputs: {\r\n                    ...state.inputs,\r\n                    [action.inputId]: { value: action.value, isValid: action.isValid }\r\n                },\r\n                isValid: formIsValid\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst useForm = (initialInputs, initialFormValidity) => {\r\n    const [formState, dispatch] = useReducer(formReducer, {\r\n        inputs: initialInputs,\r\n        isValid: initialFormValidity\r\n    });\r\n\r\n    //usecallback so that the function doesnt get remade everytime the page is reloaded\r\n    const inputHandler = useCallback((id, value, isValid) => {\r\n        dispatch({ type: 'INPUT_CHANGE', value: value, isValid: isValid, inputId: id })\r\n    }, []);\r\n\r\n}\r\n\r\nexport default useForm;"],"mappings":";AAAA,SAASA,WAAW,EAAEC,UAAU,QAAQ,OAAO;AAG/C,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACnC,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,cAAc;MACf,IAAIC,WAAW,GAAG,IAAI;MACtB;MACA,KAAK,MAAMC,OAAO,IAAIJ,KAAK,CAACK,MAAM,EAAE;QAChC,IAAID,OAAO,KAAKH,MAAM,CAACG,OAAO,EAAE;UAC5BD,WAAW,GAAGA,WAAW,IAAIF,MAAM,CAACK,OAAO;QAC/C,CAAC,MAAM;UACHH,WAAW,GAAGA,WAAW,IAAIH,KAAK,CAACK,MAAM,CAACD,OAAO,CAAC,CAACE,OAAO;QAC9D;MACJ;MACA,OAAO;QACH,GAAGN,KAAK;QACRK,MAAM,EAAE;UACJ,GAAGL,KAAK,CAACK,MAAM;UACf,CAACJ,MAAM,CAACG,OAAO,GAAG;YAAEG,KAAK,EAAEN,MAAM,CAACM,KAAK;YAAED,OAAO,EAAEL,MAAM,CAACK;UAAQ;QACrE,CAAC;QACDA,OAAO,EAAEH;MACb,CAAC;IACL;MACI,OAAOH,KAAK;EACpB;AACJ,CAAC;AAED,MAAMQ,OAAO,GAAGA,CAACC,aAAa,EAAEC,mBAAmB,KAAK;EAAAC,EAAA;EACpD,MAAM,CAACC,SAAS,EAAEC,QAAQ,CAAC,GAAGf,UAAU,CAACC,WAAW,EAAE;IAClDM,MAAM,EAAEI,aAAa;IACrBH,OAAO,EAAEI;EACb,CAAC,CAAC;;EAEF;EACA,MAAMI,YAAY,GAAGjB,WAAW,CAAC,CAACkB,EAAE,EAAER,KAAK,EAAED,OAAO,KAAK;IACrDO,QAAQ,CAAC;MAAEX,IAAI,EAAE,cAAc;MAAEK,KAAK,EAAEA,KAAK;MAAED,OAAO,EAAEA,OAAO;MAAEF,OAAO,EAAEW;IAAG,CAAC,CAAC;EACnF,CAAC,EAAE,EAAE,CAAC;AAEV,CAAC;AAAAJ,EAAA,CAXKH,OAAO;AAab,eAAeA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}