{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asher\\\\OneDrive\\\\Documents\\\\GitHub\\\\MERN-Fullstack-App\\\\main Project\\\\frontend\\\\src\\\\user\\\\pages\\\\Authenticate.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport useForm from \"../../shared/hooks/form-hook\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport './Auth.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Authenticate = props => {\n  _s();\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n\n  //keep track of formstate\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData({\n        ...formState.inputs,\n        name: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({\n        ...formState.inputs,\n        name: {\n          value: '',\n          isValid: false\n        }\n      }, false);\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  //function that gets called whenever the button gets clicked\n  const userAuthInputHandler = async event => {\n    event.preventDefault();\n    if (isLoginMode) {\n      try {\n        const response = await fetch('http://localhost:5000/api/users/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: formState.inputs.name.value,\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          })\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      try {\n        //send a http request to the backend api for signup\n        const response = await fetch('http://localhost:5000/api/users/signup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: formState.inputs.name.value,\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          })\n        });\n        const responseData = await response.json();\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    auth.login();\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"authentication\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login Required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: userAuthInputHandler,\n      children: [!isLoginMode && /*#__PURE__*/_jsxDEV(Input, {\n        element: \"input\",\n        id: \"name\",\n        type: \"text\",\n        label: \"Your Name\",\n        validators: [VALIDATOR_REQUIRE()],\n        errorText: \"Please enter your name\",\n        onInput: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"email\",\n        element: \"input\",\n        type: \"email\",\n        label: \"Email\",\n        validators: [VALIDATOR_EMAIL()],\n        errorText: \"Please enter a valid email\",\n        onInput: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"password\",\n        element: \"input\",\n        type: \"password\",\n        label: \"Password\",\n        validators: [VALIDATOR_MINLENGTH(5)],\n        errorText: \"Please enter a valid password (at least 5 characters long)\",\n        onInput: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        disabled: !formState.isValid,\n        children: isLoginMode ? 'LOGIN' : 'SIGNUP'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      inverse: true,\n      onClick: switchModeHandler,\n      children: [\"SWITCH TO \", isLoginMode ? \"SIGNUP\" : \"LOGIN\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n_s(Authenticate, \"it26s2BBt10k0kik9SPD1h3wAD8=\", false, function () {\n  return [useForm];\n});\n_c = Authenticate;\nexport default Authenticate;\nvar _c;\n$RefreshReg$(_c, \"Authenticate\");","map":{"version":3,"names":["React","useState","useContext","Input","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","Button","Card","AuthContext","jsxDEV","_jsxDEV","Authenticate","props","_s","auth","isLoginMode","setIsLoginMode","formState","inputHandler","setFormData","email","value","isValid","password","switchModeHandler","inputs","name","undefined","prevMode","userAuthInputHandler","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","error","console","log","responseData","json","login","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","element","id","type","label","validators","errorText","onInput","disabled","inverse","onClick","_c","$RefreshReg$"],"sources":["C:/Users/asher/OneDrive/Documents/GitHub/MERN-Fullstack-App/main Project/frontend/src/user/pages/Authenticate.jsx"],"sourcesContent":["import React, { useState, useContext } from \"react\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\r\nimport useForm from \"../../shared/hooks/form-hook\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport './Auth.css';\r\n\r\nconst Authenticate = (props) => {\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [isLoginMode, setIsLoginMode] = useState(true);\r\n\r\n    //keep track of formstate\r\n    const [formState, inputHandler, setFormData] = useForm({\r\n        email: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        password: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n    }, false);\r\n\r\n    const switchModeHandler = () => {\r\n        if (!isLoginMode) {\r\n            setFormData(\r\n                {\r\n                    ...formState.inputs,\r\n                    name: undefined\r\n                },\r\n                formState.inputs.email.isValid && formState.inputs.password.isValid\r\n            );\r\n        } else {\r\n            setFormData({\r\n                ...formState.inputs,\r\n                name: {\r\n                    value: '',\r\n                    isValid: false\r\n                }\r\n            }, false);\r\n        }\r\n        setIsLoginMode(prevMode => !prevMode);\r\n    }\r\n\r\n    //function that gets called whenever the button gets clicked\r\n    const userAuthInputHandler = async (event) => {\r\n        event.preventDefault();\r\n        \r\n        if (isLoginMode) {\r\n            try {\r\n                const response = await fetch('http://localhost:5000/api/users/login', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',   \r\n                    },\r\n                    body: JSON.stringify({\r\n                        name: formState.inputs.name.value,\r\n                        email: formState.inputs.email.value,\r\n                        password: formState.inputs.password.value\r\n                    })\r\n                });\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n            \r\n        } else {\r\n            try {\r\n                //send a http request to the backend api for signup\r\n                const response = await fetch('http://localhost:5000/api/users/signup', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',   \r\n                    },\r\n                    body: JSON.stringify({\r\n                        name: formState.inputs.name.value,\r\n                        email: formState.inputs.email.value,\r\n                        password: formState.inputs.password.value\r\n                    })\r\n                });\r\n\r\n                const responseData = await response.json();\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n            \r\n        }\r\n        \r\n\r\n        auth.login();\r\n    }\r\n\r\n\r\n    return (\r\n        <Card className=\"authentication\">\r\n            <h2>Login Required</h2>\r\n            <hr />\r\n            <form onSubmit={userAuthInputHandler}>\r\n                {!isLoginMode && (\r\n                    <Input\r\n                        element='input'\r\n                        id='name'\r\n                        type='text'\r\n                        label=\"Your Name\"\r\n                        validators={[VALIDATOR_REQUIRE()]}\r\n                        errorText=\"Please enter your name\"\r\n                        onInput={inputHandler}\r\n                    />\r\n                )}\r\n                <Input\r\n                    id='email'\r\n                    element='input'\r\n                    type='email'\r\n                    label='Email'\r\n                    validators={[VALIDATOR_EMAIL()]}\r\n                    errorText=\"Please enter a valid email\"\r\n                    onInput={inputHandler}\r\n                />\r\n                <Input\r\n                    id='password'\r\n                    element='input'\r\n                    type='password'\r\n                    label='Password'\r\n                    validators={[VALIDATOR_MINLENGTH(5)]}\r\n                    errorText=\"Please enter a valid password (at least 5 characters long)\"\r\n                    onInput={inputHandler}\r\n                />\r\n                <Button type='submit' disabled={!formState.isValid}>\r\n                    {isLoginMode ? 'LOGIN' : 'SIGNUP'}\r\n                </Button>\r\n            </form>\r\n            <Button inverse onClick={switchModeHandler}>SWITCH TO {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}</Button>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Authenticate;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}